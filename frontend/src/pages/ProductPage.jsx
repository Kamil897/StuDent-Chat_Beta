import React, { useState } from "react";
import { useParams, Link, useNavigate } from "react-router-dom";
import { useUser } from "../Context/UserContext";
import s from "./ProductPage.module.scss";

const products = [
  { id: 1, name: "–†–∞–¥—É–∂–Ω—ã–π", image: "/raduga.webp", description: "–Ø—Ä–∫–∏–µ –∫—Ä–∞—Å–∫–∏, –ø–æ–∑–∏—Ç–∏–≤ –∏ —Å–≤–æ–±–æ–¥–∞!", price: 1200 },
  { id: 2, name: "–ö–æ—Ç–∏–∫–∏", image: "/kitty.webp", description: "–ú—É—Ä-–º—É—Ä! –ü—É—à–∏—Å—Ç–∞—è –¥–æ–∑–∞ —É—é—Ç–∞.", price: 15000 },
  { id: 3, name: "–ü—Ä–æ—Å—Ç–æ –Ω–æ –±–æ–≥–∞—Ç–æ", image: "/luxary.webp", description: "–õ–∞–∫–æ–Ω–∏—á–Ω–æ—Å—Ç—å –∏ —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å.", price: 600 },
  { id: 4, name: "–û–ú–ì", image: "/omg.webp", description: "–í–∞—É-—ç—Ñ—Ñ–µ–∫—Ç –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω!", price: 2000 }
];

const ProductPage = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const { user, spendPoints } = useUser();
  const product = products.find((p) => p.id === Number(id));
  const [isBought, setIsBought] = useState(user.purchasedItems.some((item) => item.id === product?.id));

  if (!product) return <div className={s.notFound}>–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;

  const handleBuy = () => {
    if (spendPoints(product.price, product)) {
      setIsBought(true);
      alert("–ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!");
      navigate("/bought"); 
    } else {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤!");
    }
  };

  return (
    <div className={s.container}>
      <div className={s.productCard}>
        <div className={s.imageSection}>
          <img src={product.image} alt={product.name} className={s.image} />
        </div>

        <div className={s.detailsSection}>
          <h1 className={s.title}>{product.name}</h1>
          <p className={s.description}>{product.description}</p>
          <span className={s.price}>üí∞ {product.price} –±–∞–ª–ª–æ–≤</span>

          <div className={s.actions}>
            {isBought ? (
              <button className={s.disabledButton} disabled>–ö—É–ø–ª–µ–Ω–æ</button>
            ) : user.points >= product.price ? (
              <button className={s.buyButton} onClick={handleBuy}>–ö—É–ø–∏—Ç—å</button>
            ) : (
              <button className={s.disabledButton} disabled>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤</button>
            )}
            <Link to="/Shop" className={s.backButton}>–ù–∞–∑–∞–¥</Link>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProductPage;
